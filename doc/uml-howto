/* this documents how to run user-mode-linux on a scubed partition */

/* you need the packages: user-mode-linux, sudo, cryptsetup and you need a
 * recent version of umntscubed 
 * (http://cube.dyndns.org/svn/scubed/trunk/scripts) */

/* first make a scubed partition on /dev/hda5 (no other scubed partitions
 * exist there yet) we are in the scripts/ directory of the scubed source
 * and scubed is installed in the system path, we are root the whole time
 * make sure your system records no commandline history by symlinking
 * /root/.bash_history to /dev/null 
 * (to keep it simple, we do everything as root) */

# ./scubedisk /dev/hda5
scubed:/dev/hda5> add scubed0
Enter passphrase: 
Verify passphrase: 
scubed:/dev/hda5> resize 0,120
---WARNING---WARNING---WARNING---WARNING---WARNING---WARNING---WARNING---
allocating 120 blocks for /dev/mapper/scubed0 from the unclaimed pool
this is only safe if you listed ALL your devices associated
with the store on the commandline, continue? [No] Yes
scubed:/dev/hda5> mkfs 0
creating fs on /dev/mapper/scubed0, are you sure? [No] Yes
mke2fs 1.40-WIP (14-Nov-2006)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
122880 inodes, 245760 blocks
0 blocks (0.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=251658240
8 block groups
32768 blocks per group, 32768 fragments per group
15360 inodes per group
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376

Writing inode tables: done                            
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 34 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
scubed:/dev/hda5> quit

/* we now have a scubed partition in /dev/hda5 with a filesystem, we mount it
 * /etc/fstab must contain the line for mntscubed to work: 
 * /dev/mapper/test        /mnt/test               auto    defaults 0 0
 *
 * /mnt/test must also exist
 */
# ./mntscubed /dev/hda5 /mnt/ test
Enter passphrase: 

/* install the base debian system (/mnt/debian is my local mirror of sid) */
# debootstrap sid /mnt/test file:///mnt/debian
I: Retrieving Release
I: Retrieving Packages
I: Validating Packages
[...]
I: Base system installed successfully.

/* umount the scubed device */
# ./umntscubed /mnt/test

# cryptsetup -c aes-cbc-essiv::sha256 -s 256 create scubed.uml /dev/hda5
Enter passphrase:
# scubed /dev/mapper/scubed.uml -M uml
# linux ubd0=/dev/mapper/uml
Checking that ptrace can change system call numbers...OK
Checking syscall emulation patch for ptrace...OK
Checking advanced syscall emulation patch for ptrace...OK
Checking for tmpfs mount on /dev/shm...OK
[...]
INIT: Entering runlevel: 2

/* uml kernel starts and opens up several xterms for the virtual console */
/* everything you do in this system is stored in the scubed partition */
/* note that the 'root' user in the UML system can escape to the host
 * system, so be sure to setup a password for root immediately
 * # passwd  (in the UML guest) */
